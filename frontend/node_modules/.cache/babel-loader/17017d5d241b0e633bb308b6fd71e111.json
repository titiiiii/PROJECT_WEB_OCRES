{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\33616\\\\Documents\\\\GitHub\\\\TP2-WEB\\\\SaveProjetWeb\\\\frontend\\\\src\\\\Dashboard.js\";\nimport React from \"react\";\nimport useAuth from \"./useAuth\";\nimport { useState, useEffect } from \"react\";\nimport { Container, Form } from \"react-bootstrap\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nconst spotifyApi = new SpotifyWebApi({\n  clientId: \"6bc52007f6114854ad75a84a1d119b23\"\n});\n\nfunction Dashboard(_ref) {\n  let {\n    code\n  } = _ref;\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [image, setImage] = useState(\"\");\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n  useEffect(() => {\n    if (!searchResults) return setSearchResults([]);\n    if (!accessToken) return;\n    let cancel = false;\n    spotifyApi.searchTracks(search).then(res => {\n      if (cancel) return;\n      console.log(res.body.tracks.items[0].album.images[0].url);\n      setImage(res.body.tracks.items[0].album.images[0].url);\n    });\n    return () => cancel = true;\n  }, [search, accessToken]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"search\",\n    placeholder: \"Search Songs/Artists\",\n    value: search,\n    onChange: e => setSearch(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    alt: \"new\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  })));\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["C:/Users/33616/Documents/GitHub/TP2-WEB/SaveProjetWeb/frontend/src/Dashboard.js"],"names":["React","useAuth","useState","useEffect","Container","Form","SpotifyWebApi","spotifyApi","clientId","Dashboard","code","accessToken","search","setSearch","searchResults","setSearchResults","image","setImage","setAccessToken","cancel","searchTracks","then","res","console","log","body","tracks","items","album","images","url","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,iBAAhC;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AAMA,MAAMC,UAAU,GAAG,IAAID,aAAJ,CAAkB;AACpCE,EAAAA,QAAQ,EAAE;AAD0B,CAAlB,CAAnB;;AAIA,SAASC,SAAT,OAA2B;AAAA,MAAR;AAACC,IAAAA;AAAD,GAAQ;AAEvB,QAAMC,WAAW,GAAGV,OAAO,CAACS,IAAD,CAA3B;AACA,QAAM,CAACE,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AAGAC,EAAAA,SAAS,CAAC,MAAK;AACX,QAAG,CAACQ,WAAJ,EAAiB;AACjBJ,IAAAA,UAAU,CAACW,cAAX,CAA0BP,WAA1B;AACH,GAHQ,EAGN,CAACA,WAAD,CAHM,CAAT;AAKAR,EAAAA,SAAS,CAAC,MAAK;AACX,QAAG,CAACW,aAAJ,EAAmB,OAAOC,gBAAgB,CAAC,EAAD,CAAvB;AACnB,QAAG,CAACJ,WAAJ,EAAiB;AAEjB,QAAIQ,MAAM,GAAG,KAAb;AACAZ,IAAAA,UAAU,CAACa,YAAX,CAAwBR,MAAxB,EAAgCS,IAAhC,CAAqCC,GAAG,IAAG;AACvC,UAAGH,MAAH,EAAW;AAEXI,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,MAAT,CAAgBC,KAAhB,CAAsB,CAAtB,EAAyBC,KAAzB,CAA+BC,MAA/B,CAAsC,CAAtC,EAAyCC,GAArD;AACAb,MAAAA,QAAQ,CAAEK,GAAG,CAACG,IAAJ,CAASC,MAAT,CAAgBC,KAAhB,CAAsB,CAAtB,EAAyBC,KAAzB,CAA+BC,MAA/B,CAAsC,CAAtC,EAAyCC,GAA3C,CAAR;AACH,KALD;AAMA,WAAO,MAAMX,MAAM,GAAG,IAAtB;AACH,GAZQ,EAYN,CAACP,MAAD,EAASD,WAAT,CAZM,CAAT;AAcA,sBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,QAAnB;AACC,IAAA,WAAW,EAAC,sBADb;AAEC,IAAA,KAAK,EAAEC,MAFR;AAGC,IAAA,QAAQ,EAAImB,CAAC,IAAIlB,SAAS,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAKQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACA,IAAA,GAAG,EAAEjB,KADL;AAEA,IAAA,GAAG,EAAC,KAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALR,CADJ;AAcH;;AAED,eAAeP,SAAf","sourcesContent":["import React from \"react\";\r\nimport useAuth from \"./useAuth\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Container, Form } from \"react-bootstrap\";\r\nimport SpotifyWebApi from \"spotify-web-api-node\";\r\n\r\n\r\n\r\n\r\n\r\nconst spotifyApi = new SpotifyWebApi({\r\n clientId: \"6bc52007f6114854ad75a84a1d119b23\"\r\n})\r\n\r\nfunction Dashboard({code}) {\r\n\r\n    const accessToken = useAuth(code)\r\n    const [search, setSearch] = useState(\"\")\r\n    const [searchResults, setSearchResults] = useState([])\r\n    const [image, setImage] = useState(\"\")\r\n\r\n    \r\n    useEffect(() =>{\r\n        if(!accessToken) return\r\n        spotifyApi.setAccessToken(accessToken)\r\n    }, [accessToken])\r\n    \r\n    useEffect(() =>{\r\n        if(!searchResults) return setSearchResults([])\r\n        if(!accessToken) return\r\n\r\n        let cancel = false\r\n        spotifyApi.searchTracks(search).then(res =>{\r\n            if(cancel) return\r\n           \r\n            console.log(res.body.tracks.items[0].album.images[0].url)\r\n            setImage( res.body.tracks.items[0].album.images[0].url)\r\n        })\r\n        return () => cancel = true\r\n    }, [search, accessToken])\r\n\r\n    return (\r\n        <Container>            \r\n            <Form.Control type=\"search\"\r\n             placeholder=\"Search Songs/Artists\"\r\n             value={search}\r\n             onChange = {e => setSearch(e.target.value)}/> \r\n                <div>\r\n                    <img \r\n                    src={image}\r\n                    alt=\"new\"\r\n                    />\r\n                </div>          \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Dashboard"]},"metadata":{},"sourceType":"module"}