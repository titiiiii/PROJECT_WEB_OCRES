{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\33616\\\\Documents\\\\GitHub\\\\TP2-WEB\\\\SaveProjetWeb\\\\frontend\\\\src\\\\components\\\\Widgets\\\\Album.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport { Container, Form } from \"react-bootstrap\";\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport useAuth from '../../useAuth';\nimport { useEffect } from 'react';\nimport { search } from '../../../../backend/app';\nconst spotifyApi = new SpotifyWebApi({\n  clientId: \"6bc52007f6114854ad75a84a1d119b23\"\n});\n\nfunction Album(_ref) {\n  let {\n    accessToken,\n    search\n  } = _ref;\n  const setSearch = useState();\n  const [searchResults, setSearchResults] = useState([]);\n  const [image, setImage] = useState(\"https://i.scdn.co/image/ab67616d0000b273df55e326ed144ab4f5cecf95\");\n  const [titre, setTitre] = useState([]);\n  const [artist, setArtist] = useState([]);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return \"Pas réussi a choper le token\";\n    let cancel = false;\n    spotifyApi.searchTracks(search).then(res => {\n      if (cancel) return;\n      const searchInApi = res.body.tracks.items[0];\n      console.log(\"data:\", res); //console.log(\"la voila:\", res.body.tracks.items[0].album.images[0].url)\n\n      setImage(searchInApi.album.images[0].url);\n      setArtist(searchInApi.artists[0].name);\n      setTitre(searchInApi.name);\n    });\n    return () => cancel = true;\n  }, [search, accessToken]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"search\",\n    placeholder: \"Search Songs/Artists\",\n    value: search,\n    onChange: e => setSearch(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    width: \"300\",\n    height: \"300\",\n    src: image,\n    alt: \"Song\",\n    class: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Titre : \", titre), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Artiste : \", artist, \" \"));\n}\n\nexport default Album;","map":{"version":3,"sources":["C:/Users/33616/Documents/GitHub/TP2-WEB/SaveProjetWeb/frontend/src/components/Widgets/Album.js"],"names":["React","useState","Container","Form","SpotifyWebApi","useAuth","useEffect","search","spotifyApi","clientId","Album","accessToken","setSearch","searchResults","setSearchResults","image","setImage","titre","setTitre","artist","setArtist","setAccessToken","cancel","searchTracks","then","res","searchInApi","body","tracks","items","console","log","album","images","url","artists","name","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport { Container, Form } from \"react-bootstrap\";\r\nimport SpotifyWebApi from 'spotify-web-api-node';\r\nimport useAuth from '../../useAuth';\r\nimport { useEffect } from 'react';\r\nimport { search } from '../../../../backend/app';\r\n\r\n\r\nconst spotifyApi = new SpotifyWebApi({\r\n    clientId: \"6bc52007f6114854ad75a84a1d119b23\"    \r\n   })\r\n   \r\n\r\n\r\nfunction Album({accessToken, search}){    \r\n\r\n\r\n    const setSearch = useState()\r\n    const [searchResults, setSearchResults] = useState([])\r\n    const [image, setImage] = useState(\"https://i.scdn.co/image/ab67616d0000b273df55e326ed144ab4f5cecf95\")\r\n    const [titre, setTitre] = useState([])\r\n    const [artist, setArtist] = useState([]) \r\n    \r\n    useEffect(() =>{\r\n        if(!accessToken) return\r\n        spotifyApi.setAccessToken(accessToken)\r\n    }, [accessToken])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if(!search) return setSearchResults([])\r\n        if(!accessToken) return (\"Pas réussi a choper le token\")   \r\n        let cancel = false\r\n        \r\n\r\n\r\n        spotifyApi.searchTracks(search).then(res =>{\r\n            if(cancel) return\r\n\r\n        const searchInApi = res.body.tracks.items[0]\r\n        \r\n        console.log(\"data:\", res)\r\n        //console.log(\"la voila:\", res.body.tracks.items[0].album.images[0].url)\r\n        setImage(searchInApi.album.images[0].url)\r\n        setArtist(searchInApi.artists[0].name)\r\n        setTitre(searchInApi.name)\r\n        })\r\n        \r\n\r\n\r\n    return () => cancel = true    \r\n    }, [search, accessToken])\r\n\r\n  \r\n   \r\n\r\nreturn (\r\n        <div>       \r\n        <input type=\"search\"\r\n         placeholder=\"Search Songs/Artists\"\r\n         value={search}\r\n         onChange = {e => setSearch(e.target.value)}/>\r\n            <div>\r\n                <img \r\n                width=\"300\" \r\n                height=\"300\"\r\n                src={image}\r\n                alt=\"Song\" \r\n                class=\"center\"                            \r\n                />                \r\n            </div> \r\n        <div>Titre : {titre}</div>\r\n        <div>Artiste : {artist} </div>        \r\n                   \r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Album;"]},"metadata":{},"sourceType":"module"}