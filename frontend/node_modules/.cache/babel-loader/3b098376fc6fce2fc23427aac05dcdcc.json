{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\33616\\\\Documents\\\\GitHub\\\\TP2-WEB\\\\SaveProjetWeb\\\\frontend\\\\src\\\\Dashboard.js\";\nimport React from \"react\";\nimport useAuth from \"./useAuth\";\nimport { useState, useEffect } from \"react\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport Affichage from \"./components/Affichage\";\nimport Home from \"./page/home/Home\";\nimport axios from \"axios\";\nconst spotifyApi = new SpotifyWebApi({\n  clientId: \"6bc52007f6114854ad75a84a1d119b23\"\n});\n\nfunction Dashboard(_ref) {\n  let {\n    code\n  } = _ref;\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [playingTrack, setPlayingTrack] = useState(\"\");\n  const [titre, setTitre] = useState([]);\n  const [artist, setArtist] = useState([]);\n  const [lyrics, setLyrics] = useState(\"\");\n\n  function chooseTrack(track) {\n    setPlayingTrack(track);\n    setSearch('');\n    setLyrics(\"\");\n  }\n\n  useEffect(() => {\n    if (!playingTrack) return;\n    axios.get('http://localhost:3001/lyrics', {\n      params: {\n        track: playingTrack.titre,\n        artist: playingTrack.artist\n      }\n    }).then(res => {\n      setLyrics(res.data.lyrics);\n    });\n  }, [playingTrack]);\n  console.log(\"Track: \", playingTrack);\n  console.log(\"Artist: \", artist);\n  console.log(\"titre: \", titre);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return;\n    let cancel = false;\n    spotifyApi.searchTracks(search).then(res => {\n      if (cancel) return;\n      const searchInApi = res.body.tracks.items[0];\n      console.log(\"data:\", res); //Affichage de l'API dans la console   \n\n      setPlayingTrack(searchInApi.uri);\n      setTitre(searchInApi.name);\n      setArtist(searchInApi.artists[0].name);\n      console.log(\"artist : \", artist);\n    });\n    return () => cancel = true;\n  }, [search, accessToken]);\n  return /*#__PURE__*/React.createElement(Affichage, {\n    accessToken: accessToken,\n    search: search,\n    setSearch: setSearch,\n    playingTrack: playingTrack,\n    titre: titre,\n    artist: artist,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  });\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["C:/Users/33616/Documents/GitHub/TP2-WEB/SaveProjetWeb/frontend/src/Dashboard.js"],"names":["React","useAuth","useState","useEffect","SpotifyWebApi","Affichage","Home","axios","spotifyApi","clientId","Dashboard","code","accessToken","search","setSearch","searchResults","setSearchResults","playingTrack","setPlayingTrack","titre","setTitre","artist","setArtist","lyrics","setLyrics","chooseTrack","track","get","params","then","res","data","console","log","setAccessToken","cancel","searchTracks","searchInApi","body","tracks","items","uri","name","artists"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport useAuth from \"./useAuth\";\r\nimport { useState, useEffect } from \"react\";\r\nimport SpotifyWebApi from \"spotify-web-api-node\";\r\nimport Affichage from \"./components/Affichage\";\r\nimport Home from \"./page/home/Home\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nconst spotifyApi = new SpotifyWebApi({\r\n clientId: \"6bc52007f6114854ad75a84a1d119b23\"\r\n})\r\n\r\nfunction Dashboard({code}) {\r\n\r\n    const accessToken = useAuth(code)\r\n    const [search, setSearch] = useState(\"\")\r\n    const [searchResults, setSearchResults] = useState([])\r\n    const [playingTrack, setPlayingTrack] = useState(\"\")\r\n    const [titre, setTitre] = useState([])\r\n    const [artist, setArtist] = useState([])\r\n    const [lyrics, setLyrics] = useState(\"\")\r\n\r\n    \r\n\r\n  \r\n    function chooseTrack(track) {\r\n        setPlayingTrack(track)\r\n        setSearch('')\r\n        setLyrics(\"\")\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        if (!playingTrack) return\r\n\r\n        axios.get('http://localhost:3001/lyrics', {\r\n            params: {\r\n                track: playingTrack.titre,\r\n                artist: playingTrack.artist\r\n            }\r\n        }).then(res =>{\r\n            setLyrics(res.data.lyrics)\r\n        })\r\n            \r\n    }, [playingTrack])\r\n\r\n    console.log(\"Track: \", playingTrack)\r\n    console.log(\"Artist: \", artist)\r\n    console.log(\"titre: \", titre)\r\n\r\n\r\n    useEffect(() =>{\r\n        if(!accessToken) return\r\n        spotifyApi.setAccessToken(accessToken)\r\n    }, [accessToken])\r\n    \r\n    useEffect(() =>{\r\n        if(!search) return setSearchResults([])\r\n        if(!accessToken) return\r\n\r\n        let cancel = false\r\n\r\n        spotifyApi.searchTracks(search).then(res =>{\r\n          if(cancel) return\r\n\r\n      const searchInApi = res.body.tracks.items[0]\r\n      \r\n      console.log(\"data:\", res)     //Affichage de l'API dans la console   \r\n      setPlayingTrack(searchInApi.uri)\r\n      setTitre(searchInApi.name)\r\n      setArtist(searchInApi.artists[0].name)\r\n\r\n      console.log(\"artist : \", artist)\r\n      \r\n      })\r\n      \r\n\r\n  return () => cancel = true    \r\n  }, [search, accessToken])\r\n    \r\n\r\n   \r\n    return (\r\n      <Affichage accessToken={accessToken} search={search} setSearch={setSearch} playingTrack={playingTrack} \r\n      titre={titre} artist={artist}/>\r\n  )      \r\n      \r\n}\r\n\r\nexport default Dashboard"]},"metadata":{},"sourceType":"module"}