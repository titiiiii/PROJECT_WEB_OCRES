{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\33616\\\\Documents\\\\GitHub\\\\TP2-WEB\\\\SaveProjetWeb\\\\frontend\\\\src\\\\components\\\\Widgets\\\\PlayMe.js\";\nimport React, { useState } from \"react\";\nimport Player from \"../Player\";\nimport { useEffect } from \"react\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\n\nfunction PlayMe(_ref) {\n  let {\n    accessToken,\n    search\n  } = _ref;\n  const [playingTrack, setPlayingTrack] = useState();\n  const [searchResults, setSearchResults] = useState([]);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return \"Pas réussi a choper le token\";\n    let cancel = false; //spotifyApi.searchTracks(search).then(res =>{\n    //    if(cancel) return\n    // const searchInApi = res.body.tracks.items[0]\n    // console.log(\"data:\", res)\n    // setPlayingTrack(searchInApi.uri)        \n    // })\n\n    return () => cancel = true;\n  }, [search, accessToken]);\n  console.log(\"Track : \", playingTrack);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Player, {\n    accessToken: accessToken,\n    playingTrack: playingTrack === null || playingTrack === void 0 ? void 0 : playingTrack.uri,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default PlayMe;","map":{"version":3,"sources":["C:/Users/33616/Documents/GitHub/TP2-WEB/SaveProjetWeb/frontend/src/components/Widgets/PlayMe.js"],"names":["React","useState","Player","useEffect","SpotifyWebApi","PlayMe","accessToken","search","playingTrack","setPlayingTrack","searchResults","setSearchResults","spotifyApi","setAccessToken","cancel","console","log","uri"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,aAAP,MAA0B,sBAA1B;;AAKC,SAASC,MAAT,OAAsC;AAAA,MAAtB;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,GAAsB;AAErC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,EAAhD;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;AAIEE,EAAAA,SAAS,CAAC,MAAK;AACX,QAAG,CAACG,WAAJ,EAAiB;AACjBM,IAAAA,UAAU,CAACC,cAAX,CAA0BP,WAA1B;AACH,GAHQ,EAGN,CAACA,WAAD,CAHM,CAAT;AAOAH,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACI,MAAJ,EAAY,OAAOI,gBAAgB,CAAC,EAAD,CAAvB;AACZ,QAAG,CAACL,WAAJ,EAAiB,OAAQ,8BAAR;AACjB,QAAIQ,MAAM,GAAG,KAAb,CAHY,CAMZ;AACA;AAED;AAEA;AACA;AACA;;AAGH,WAAO,MAAMA,MAAM,GAAG,IAAtB;AACC,GAjBQ,EAiBN,CAACP,MAAD,EAASD,WAAT,CAjBM,CAAT;AAmBAS,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBR,YAAxB;AAGF,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAGF,WAAtB;AAAmC,IAAA,YAAY,EAAEE,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAES,GAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAMA;;AAED,eAAeZ,MAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport Player from \"../Player\";\r\nimport { useEffect } from \"react\";\r\nimport SpotifyWebApi from \"spotify-web-api-node\";\r\n\r\n\r\n\r\n\r\n function PlayMe({accessToken, search}){  \r\n  \r\n  const [playingTrack, setPlayingTrack] = useState() \r\n  const [searchResults, setSearchResults] = useState([])\r\n  \r\n     \r\n    \r\n    useEffect(() =>{\r\n        if(!accessToken) return\r\n        spotifyApi.setAccessToken(accessToken)\r\n    }, [accessToken])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if(!search) return setSearchResults([])\r\n        if(!accessToken) return (\"Pas réussi a choper le token\")   \r\n        let cancel = false\r\n        \r\n\r\n        //spotifyApi.searchTracks(search).then(res =>{\r\n        //    if(cancel) return\r\n\r\n       // const searchInApi = res.body.tracks.items[0]\r\n        \r\n       // console.log(\"data:\", res)\r\n       // setPlayingTrack(searchInApi.uri)        \r\n       // })\r\n        \r\n\r\n    return () => cancel = true    \r\n    }, [search, accessToken])\r\n\r\n    console.log(\"Track : \", playingTrack)\r\n\r\n   \r\n  return(\r\n    <div>\r\n      <Player accessToken ={accessToken} playingTrack={playingTrack?.uri}/>\r\n    </div>\r\n  )\r\n  \r\n }\r\n\r\n export default PlayMe;"]},"metadata":{},"sourceType":"module"}