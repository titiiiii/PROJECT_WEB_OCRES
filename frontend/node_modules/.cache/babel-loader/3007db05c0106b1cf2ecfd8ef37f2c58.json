{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\33616\\\\Documents\\\\GitHub\\\\TP2-WEB\\\\SaveProjetWeb\\\\frontend\\\\src\\\\components\\\\Widgets\\\\Album.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport { Container, Form } from \"react-bootstrap\";\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport useAuth from '../../useAuth';\nimport { useEffect } from 'react';\nconst spotifyApi = new SpotifyWebApi({\n  clientId: \"6bc52007f6114854ad75a84a1d119b23\"\n});\n\nfunction Album(accessToken) {\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [image, setImage] = useState(\"\");\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return \"Pas réussi a choper le token\";\n    spotifyApi.searchTracks(search).then(res => {\n      console.log(res.body.tracks.items[0].album.images[0].url);\n      setImage(res.body.tracks.items[0].album.images[0].url);\n    });\n  });\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"search\",\n    placeholder: \"Search Songs/Artists\",\n    value: search,\n    onChange: e => setSearch(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    alt: \"Song\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default Album;","map":{"version":3,"sources":["C:/Users/33616/Documents/GitHub/TP2-WEB/SaveProjetWeb/frontend/src/components/Widgets/Album.js"],"names":["React","useState","Container","Form","SpotifyWebApi","useAuth","useEffect","spotifyApi","clientId","Album","accessToken","search","setSearch","searchResults","setSearchResults","image","setImage","setAccessToken","searchTracks","then","res","console","log","body","tracks","items","album","images","url","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,iBAAhC;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,SAAT,QAA0B,OAA1B;AAGA,MAAMC,UAAU,GAAG,IAAIH,aAAJ,CAAkB;AACjCI,EAAAA,QAAQ,EAAE;AADuB,CAAlB,CAAnB;;AAMA,SAASC,KAAT,CAAeC,WAAf,EAA2B;AAIvB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AAGAK,EAAAA,SAAS,CAAC,MAAK;AACX,QAAG,CAACI,WAAJ,EAAiB;AACjBH,IAAAA,UAAU,CAACU,cAAX,CAA0BP,WAA1B;AACH,GAHQ,EAGN,CAACA,WAAD,CAHM,CAAT;AAOAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACK,MAAJ,EAAY,OAAOG,gBAAgB,CAAC,EAAD,CAAvB;AACZ,QAAG,CAACJ,WAAJ,EAAiB,OAAQ,8BAAR;AAGrBH,IAAAA,UAAU,CAACW,YAAX,CAAwBP,MAAxB,EAAgCQ,IAAhC,CAAqCC,GAAG,IAAG;AACvCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,MAAT,CAAgBC,KAAhB,CAAsB,CAAtB,EAAyBC,KAAzB,CAA+BC,MAA/B,CAAsC,CAAtC,EAAyCC,GAArD;AACAZ,MAAAA,QAAQ,CAAEI,GAAG,CAACG,IAAJ,CAASC,MAAT,CAAgBC,KAAhB,CAAsB,CAAtB,EAAyBC,KAAzB,CAA+BC,MAA/B,CAAsC,CAAtC,EAAyCC,GAA3C,CAAR;AACH,KAHD;AAIH,GATY,CAAT;AAaJ,sBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,QAAnB;AACC,IAAA,WAAW,EAAC,sBADb;AAEC,IAAA,KAAK,EAAEjB,MAFR;AAGC,IAAA,QAAQ,EAAIkB,CAAC,IAAIjB,SAAS,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAKQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACA,IAAA,GAAG,EAAEhB,KADL;AAEA,IAAA,GAAG,EAAC,MAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALR,CADJ;AAcC;;AAED,eAAeN,KAAf","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport { Container, Form } from \"react-bootstrap\";\r\nimport SpotifyWebApi from 'spotify-web-api-node';\r\nimport useAuth from '../../useAuth';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nconst spotifyApi = new SpotifyWebApi({\r\n    clientId: \"6bc52007f6114854ad75a84a1d119b23\"\r\n   })\r\n   \r\n\r\n\r\nfunction Album(accessToken){    \r\n\r\n\r\n    \r\n    const [search, setSearch] = useState(\"\")\r\n    const [searchResults, setSearchResults] = useState([])\r\n    const [image, setImage] = useState(\"\")\r\n\r\n     \r\n    useEffect(() =>{\r\n        if(!accessToken) return\r\n        spotifyApi.setAccessToken(accessToken)\r\n    }, [accessToken])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if(!search) return setSearchResults([])\r\n        if(!accessToken) return (\"Pas réussi a choper le token\")\r\n        \r\n\r\n    spotifyApi.searchTracks(search).then(res =>{\r\n        console.log(res.body.tracks.items[0].album.images[0].url)\r\n        setImage( res.body.tracks.items[0].album.images[0].url)\r\n    })\r\n})\r\n  \r\n   \r\n\r\nreturn (\r\n    <Container>            \r\n        <Form.Control type=\"search\"\r\n         placeholder=\"Search Songs/Artists\"\r\n         value={search}\r\n         onChange = {e => setSearch(e.target.value)}/> \r\n            <div>\r\n                <img \r\n                src={image}\r\n                alt=\"Song\"\r\n                />\r\n            </div>          \r\n    </Container>\r\n    )\r\n}\r\n\r\nexport default Album;"]},"metadata":{},"sourceType":"module"}